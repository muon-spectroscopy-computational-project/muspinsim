name: Build pip wheels

on:
  push:
    branches:
      - main
      - add-pyproject-toml-#34

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macOS-12 pinned here due to usage of $(brew --prefix llvm@14) in
        # pyproject.toml - this may need updating for future runner images
        os: [ubuntu-latest, macOS-12, windows-latest]

    steps:
      - uses: actions/checkout@v3

      # Required for aarch64
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4
        env:
          # aarch64 and arm64 are both ARM architectures
          # defined here to allow them to be built on the Intel based runners
          CIBW_ARCHS_WINDOWS: auto # ARM64 - ignore for now, seems numpy causes issues here
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64

          # Run tests of the installed wheels (skipping ARM as they wont run here)
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest --pyargs muspinsim
          CIBW_TEST_SKIP: "*-*linux_{aarch64,ppc64le,s390x} *-macosx_arm64 *-macosx_universal2:arm64"
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz